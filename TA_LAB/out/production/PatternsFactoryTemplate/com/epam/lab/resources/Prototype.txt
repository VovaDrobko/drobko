Prototype pattern provides a mechanism to copy the original object
to a new object and then modify it according to our needs.
Prototype design pattern uses java cloning to copy the object.

Prototype example:
Employees.java

public class Employees implements Cloneable {

    private List<String> empList;

    public void loadData() {
        empList.add("Pankaj");
        empList.add("Raj");
        empList.add("David");
        empList.add("Lisa");
    }

    @Override
    public Object clone() throws CloneNotSupportedException {
        List<String> temp = new ArrayList<String>();
        for (String s : this.getEmpList()) {
            temp.add(s);
        }
        return new Employees(temp);
    }
//...
}

PrototypeDemo.java
//...
private void testPrototype() throws CloneNotSupportedException {
        empsNew = (Employees) emps.clone();
        Employees empsNew1 = (Employees) emps.clone();
        List<String> list = empsNew.getEmpList();
        list.add("John");
        List<String> list1 = empsNew1.getEmpList();
        list1.remove("Pankaj");
        System.out.println("Output:\nemps List: " + emps.getEmpList());
        System.out.println("empsNew List: " + list);
        System.out.println("empsNew1 List: " + list1);
    }
//...